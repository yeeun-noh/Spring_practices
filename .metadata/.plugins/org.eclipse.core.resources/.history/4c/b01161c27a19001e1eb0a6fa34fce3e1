<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- bean 태그:
	- id(객체명), class(해당 클래스 위치) : 스프링 컨테이너에 tv라는 이름으로 polymorphism.SamsungTV에 객체를 생성 (생성되면 생성자 호출)
	- init-method: 그리고 초기설정 (initMethod메서드 수행)
	- destroy-method: 객체가 소멸시 destoryMethod메서드 수행
	- scope: 디폴트값은 scope="singleton" (하나의 Bean 정의에 대해 스프링 컨테이너내의 단 하나의 객체만 존재 (한번 동작))
			 scope="prototype"인 경우 하나의 Bean 정의에 대해 다수의 객체가 존재 (스프링 컨테이너내의 객체의 수만큼 동작)
	-->
	<!-- 첫번째 사용 (xml설정기반):
	<bean id="tv" class="polymorphism.SamsungTV" init-method="initMethod"
	destroy-method="destoryMethod" scope="prototype">
	</bean>
	-->
	
	<!-- 두번째 사용 (xml설정기반):
	<bean id="tv" class="polymorphism.SamsungTV">
		<constructor-arg index="0" ref="apple"></constructor-arg>
		<constructor-arg index="1" value="350000"></constructor-arg>
		
		setter를 불러옴:
		<property name="speaker" ref="apple"></property>
		<property name="price" value="15000"></property>
	</bean>
	
	<bean id="sony" class="polymorphism.SonySpeaker">
	</bean>
	
	<bean id="apple" class="polymorphism.AppleSpeaker">
	</bean> 
	-->
	
	
	<!-- (어노테이션@ 기반):
	@Component
	-->
	<context:component-scan base-package="polymorphism"></context:component-scan>
</beans>














